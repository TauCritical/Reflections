What happens when you initialize a repository? Why do you need to do it?

Git creates a .git file and takes a snapshot of what files are in the directory. Without this step, the infrastructure to track changes does not exist.

How can you use the staging area to make sure you have one commit per logical change?

By adding things to the staging area and comparing the staging area to the latest commit prior to committing, you can see exactly what will be changed in the repository prior to committing and evaluate whether that constitutes more than one logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches allow for larger scale changes that can be iteratively built upon and modified while still easily reverting to a point before those changes/making changes to any bugs that exist in an earlier version.

How do the diagrams help you visualize the branch structure?

Commits have the concept of a parent... only commits in the sequence of parents back to the initial commit show up in a log. The head is the most recent commit of the current branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging two branches identifies the last parent the two branches have in common as a starting point. Then, using that parent, git identifies what was deleted from that parent by either branch and deletes it from the merged version. It also identifies anything that was added by either branch and adds it to the merged version. It is represented on the diagram as it is to show that the commits leading up to the final commit in either branch before the merge are then accessible in the merged branch.

What are the pros and cons of gits automatic merging vs. always doing merges manually?

Doing merges manually is slower and prone to overlooking changes. Git's automatic merging is quicker and less error-prone, but makes assumptions that deletions in one branch won't affect the other branch, or additions in one branch won't affect the other branch.
